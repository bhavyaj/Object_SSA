digraph "DirectedGraph" {
graph [label = "Object SSA for Root.<init>(IIII)V", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1   invokespecial < Application, Ljava/lang/Object, <init>()V > v1 @1 exception:v7\l" [ ]
   "BB2\n4  PutOSSAInstruction:	O1_1< theta_R > = O1_1<V8>\l" [ ]
   "BB3\n7  PutOSSAInstruction:	O1_2< theta_I > = O1_1<V9>\l" [ ]
   "BB4\n9  Create O2_1                               \l" [ ]
   "BB5\n11   invokespecial < Application, LDemand, <init>()V > v10 @23 exception:v11\l" [ ]
   "BB6\n12  PutOSSAInstruction:	O1_3< D > = O1_2<refO2_1>\l" [ ]
   "BB7\n14  Create O3_1                              \l" [ ]
   "BB8\n16   invokespecial < Application, LDemand, <init>()V > v12 @34 exception:v13\l" [ ]
   "BB9\n17  PutOSSAInstruction:	O1_4< last > = O1_3<refO3_1>\l" [ ]
   "BB10\n20  Create O4_1                              \l" [ ]
   "BB11\n21  PutOSSAInstruction:	O1_5< feeders > = O1_4<refO4_1>\l" [ ]
   "BB12\n" [ ]
   "BB13\n           v21 = phi  v20,v15:#0\l26   conditional branch(ge) v21,v2           \l" [ ]
   "BB14\n28  GetOSSAInstruction:	O4_1= O1_5< feeders> \l" [ ]
   "BB15\n30  Create O5_1                              \l" [ ]
   "BB16\n35   invokespecial < Application, LLateral, <init>(III)V > v17,v3,v4,v5 @71 exception:v18\l" [ ]
   "BB17\n36   arraystore v16[v21] = v17               \l" [ ]
   "BB18\n39   v20 = binaryop(add) v21 , v19:#1        \l41   goto                                    \l" [ ]
   "BB19\n42  return                                   \l" [ ]
   "BB20 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1   invokespecial < Application, Ljava/lang/Object, <init>()V > v1 @1 exception:v7\l" 
 "BB1\n1   invokespecial < Application, Ljava/lang/Object, <init>()V > v1 @1 exception:v7\l" -> "BB2\n4  PutOSSAInstruction:	O1_1< theta_R > = O1_1<V8>\l" 
 "BB2\n4  PutOSSAInstruction:	O1_1< theta_R > = O1_1<V8>\l" -> "BB3\n7  PutOSSAInstruction:	O1_2< theta_I > = O1_1<V9>\l" 
 "BB3\n7  PutOSSAInstruction:	O1_2< theta_I > = O1_1<V9>\l" -> "BB4\n9  Create O2_1                               \l" 
 "BB4\n9  Create O2_1                               \l" -> "BB5\n11   invokespecial < Application, LDemand, <init>()V > v10 @23 exception:v11\l" 
 "BB5\n11   invokespecial < Application, LDemand, <init>()V > v10 @23 exception:v11\l" -> "BB6\n12  PutOSSAInstruction:	O1_3< D > = O1_2<refO2_1>\l" 
 "BB6\n12  PutOSSAInstruction:	O1_3< D > = O1_2<refO2_1>\l" -> "BB7\n14  Create O3_1                              \l" 
 "BB7\n14  Create O3_1                              \l" -> "BB8\n16   invokespecial < Application, LDemand, <init>()V > v12 @34 exception:v13\l" 
 "BB8\n16   invokespecial < Application, LDemand, <init>()V > v12 @34 exception:v13\l" -> "BB9\n17  PutOSSAInstruction:	O1_4< last > = O1_3<refO3_1>\l" 
 "BB9\n17  PutOSSAInstruction:	O1_4< last > = O1_3<refO3_1>\l" -> "BB10\n20  Create O4_1                              \l" 
 "BB10\n20  Create O4_1                              \l" -> "BB11\n21  PutOSSAInstruction:	O1_5< feeders > = O1_4<refO4_1>\l" 
 "BB11\n21  PutOSSAInstruction:	O1_5< feeders > = O1_4<refO4_1>\l" -> "BB12\n" 
 "BB12\n" -> "BB13\n           v21 = phi  v20,v15:#0\l26   conditional branch(ge) v21,v2           \l" 
 "BB13\n           v21 = phi  v20,v15:#0\l26   conditional branch(ge) v21,v2           \l" -> "BB14\n28  GetOSSAInstruction:	O4_1= O1_5< feeders> \l" 
 "BB13\n           v21 = phi  v20,v15:#0\l26   conditional branch(ge) v21,v2           \l" -> "BB19\n42  return                                   \l" 
 "BB14\n28  GetOSSAInstruction:	O4_1= O1_5< feeders> \l" -> "BB15\n30  Create O5_1                              \l" 
 "BB15\n30  Create O5_1                              \l" -> "BB16\n35   invokespecial < Application, LLateral, <init>(III)V > v17,v3,v4,v5 @71 exception:v18\l" 
 "BB16\n35   invokespecial < Application, LLateral, <init>(III)V > v17,v3,v4,v5 @71 exception:v18\l" -> "BB17\n36   arraystore v16[v21] = v17               \l" 
 "BB17\n36   arraystore v16[v21] = v17               \l" -> "BB18\n39   v20 = binaryop(add) v21 , v19:#1        \l41   goto                                    \l" 
 "BB18\n39   v20 = binaryop(add) v21 , v19:#1        \l41   goto                                    \l" -> "BB13\n           v21 = phi  v20,v15:#0\l26   conditional branch(ge) v21,v2           \l" 
 "BB19\n42  return                                   \l" -> "BB20 (ex)\n\n" 

}