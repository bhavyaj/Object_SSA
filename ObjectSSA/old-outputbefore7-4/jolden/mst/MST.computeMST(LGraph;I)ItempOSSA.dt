digraph "DirectedGraph" {
graph [label = "Object SSA for MST.computeMST(LGraph;I)I", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n3   v6 = invokevirtual < Application, LGraph, firstNode()LVertex; > v1 @3 exception:v5\l" [ ]
   "BB2\n6   v8 = invokevirtual < Application, LVertex, next()LVertex; > v6 @8 exception:v7\l" [ ]
   "BB3\n9   putstatic v8 < Application, LMST, MyVertexList, <Application,LVertex> >\l12   v10 = binaryop(add) v2 , v9:#-1         \l" [ ]
   "BB4\n           O2_1 = diff-Object-Phi(nullobject_14, nullobject_6 )\l           v19 = phi  v17,v10\l           v20 = phi  v18,v4:#0\l           v21 = phi  v14,v6\l16   conditional branch(eq) v19,v4:#0        \l" [ ]
   "BB5\n18   v12 = invokestatic < Application, LMST, doAllBlueRule(LVertex;)LBlueReturn; > v21 @26 exception:v11\l" [ ]
   "BB6\n21   v14 = invokevirtual < Application, LBlueReturn, vert()LVertex; > v12 @33 exception:v13\l" [ ]
   "BB7\n24   v16 = invokevirtual < Application, LBlueReturn, dist()I > v12 @39 exception:v15\l" [ ]
   "BB8\n28   v17 = binaryop(add) v19 , v9:#-1        \l32   v18 = binaryop(add) v20 , v16           \l34   goto                                    \l" [ ]
   "BB9\n36   return v20                              \l" [ ]
   "BB10 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n3   v6 = invokevirtual < Application, LGraph, firstNode()LVertex; > v1 @3 exception:v5\l" 
 "BB1\n3   v6 = invokevirtual < Application, LGraph, firstNode()LVertex; > v1 @3 exception:v5\l" -> "BB2\n6   v8 = invokevirtual < Application, LVertex, next()LVertex; > v6 @8 exception:v7\l" 
 "BB2\n6   v8 = invokevirtual < Application, LVertex, next()LVertex; > v6 @8 exception:v7\l" -> "BB3\n9   putstatic v8 < Application, LMST, MyVertexList, <Application,LVertex> >\l12   v10 = binaryop(add) v2 , v9:#-1         \l" 
 "BB3\n9   putstatic v8 < Application, LMST, MyVertexList, <Application,LVertex> >\l12   v10 = binaryop(add) v2 , v9:#-1         \l" -> "BB4\n           O2_1 = diff-Object-Phi(nullobject_14, nullobject_6 )\l           v19 = phi  v17,v10\l           v20 = phi  v18,v4:#0\l           v21 = phi  v14,v6\l16   conditional branch(eq) v19,v4:#0        \l" 
 "BB4\n           O2_1 = diff-Object-Phi(nullobject_14, nullobject_6 )\l           v19 = phi  v17,v10\l           v20 = phi  v18,v4:#0\l           v21 = phi  v14,v6\l16   conditional branch(eq) v19,v4:#0        \l" -> "BB5\n18   v12 = invokestatic < Application, LMST, doAllBlueRule(LVertex;)LBlueReturn; > v21 @26 exception:v11\l" 
 "BB4\n           O2_1 = diff-Object-Phi(nullobject_14, nullobject_6 )\l           v19 = phi  v17,v10\l           v20 = phi  v18,v4:#0\l           v21 = phi  v14,v6\l16   conditional branch(eq) v19,v4:#0        \l" -> "BB9\n36   return v20                              \l" 
 "BB5\n18   v12 = invokestatic < Application, LMST, doAllBlueRule(LVertex;)LBlueReturn; > v21 @26 exception:v11\l" -> "BB6\n21   v14 = invokevirtual < Application, LBlueReturn, vert()LVertex; > v12 @33 exception:v13\l" 
 "BB6\n21   v14 = invokevirtual < Application, LBlueReturn, vert()LVertex; > v12 @33 exception:v13\l" -> "BB7\n24   v16 = invokevirtual < Application, LBlueReturn, dist()I > v12 @39 exception:v15\l" 
 "BB7\n24   v16 = invokevirtual < Application, LBlueReturn, dist()I > v12 @39 exception:v15\l" -> "BB8\n28   v17 = binaryop(add) v19 , v9:#-1        \l32   v18 = binaryop(add) v20 , v16           \l34   goto                                    \l" 
 "BB8\n28   v17 = binaryop(add) v19 , v9:#-1        \l32   v18 = binaryop(add) v20 , v16           \l34   goto                                    \l" -> "BB4\n           O2_1 = diff-Object-Phi(nullobject_14, nullobject_6 )\l           v19 = phi  v17,v10\l           v20 = phi  v18,v4:#0\l           v21 = phi  v14,v6\l16   conditional branch(eq) v19,v4:#0        \l" 
 "BB9\n36   return v20                              \l" -> "BB10 (ex)\n\n" 

}