digraph "DirectedGraph" {
graph [label = "Object SSA for Node.gravSub(LNode$HG;)LNode$HG;", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n0  Create O3_1                               \l" [ ]
   "BB2\n2   invokespecial < Application, LMathVector, <init>()V > v4 @4 exception:v5\l" [ ]
   "BB3\n6  GetOSSAInstruction:	O4_1= O1_1< pos>      \l" [ ]
   "BB4\n8  GetOSSAInstruction:	O5_1= O2_1< pos0>     \l" [ ]
   "BB5\n9   invokevirtual < Application, LMathVector, subtraction(LMathVector;LMathVector;)V > v4,v6,v7 @17 exception:v8\l" [ ]
   "BB6\n11   v10 = invokevirtual < Application, LMathVector, dotProduct()D > v4 @21 exception:v9\l" [ ]
   "BB7\n13   v12 = binaryop(add) v10 , v11:#0.0025000000000000005\l16   v14 = invokestatic < Application, Ljava/lang/Math, sqrt(D)D > v12 @30 exception:v13\l" [ ]
   "BB8\n19  GetOSSAInstruction:	15= O1_1< mass>      \l" [ ]
   "BB9\n21   v16 = binaryop(div) v15 , v14           \l25  GetOSSAInstruction:	17= O2_1< phi0>      \l" [ ]
   "BB10\n27   v18 = binaryop(sub) v17 , v16           \l28  PutOSSAInstruction:	O2_1< phi0 > = O2_1<V18>\l" [ ]
   "BB11\n31   v19 = binaryop(div) v16 , v12           \l35   invokevirtual < Application, LMathVector, multScalar(D)V > v4,v19 @64 exception:v20\l" [ ]
   "BB12\n37  GetOSSAInstruction:	O6_1= O2_1< acc0>    \l" [ ]
   "BB13\n39   invokevirtual < Application, LMathVector, addition(LMathVector;)V > v21,v4 @72 exception:v22\l" [ ]
   "BB14\n41   return v2                               \l" [ ]
   "BB15 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n0  Create O3_1                               \l" 
 "BB1\n0  Create O3_1                               \l" -> "BB2\n2   invokespecial < Application, LMathVector, <init>()V > v4 @4 exception:v5\l" 
 "BB2\n2   invokespecial < Application, LMathVector, <init>()V > v4 @4 exception:v5\l" -> "BB3\n6  GetOSSAInstruction:	O4_1= O1_1< pos>      \l" 
 "BB3\n6  GetOSSAInstruction:	O4_1= O1_1< pos>      \l" -> "BB4\n8  GetOSSAInstruction:	O5_1= O2_1< pos0>     \l" 
 "BB4\n8  GetOSSAInstruction:	O5_1= O2_1< pos0>     \l" -> "BB5\n9   invokevirtual < Application, LMathVector, subtraction(LMathVector;LMathVector;)V > v4,v6,v7 @17 exception:v8\l" 
 "BB5\n9   invokevirtual < Application, LMathVector, subtraction(LMathVector;LMathVector;)V > v4,v6,v7 @17 exception:v8\l" -> "BB6\n11   v10 = invokevirtual < Application, LMathVector, dotProduct()D > v4 @21 exception:v9\l" 
 "BB6\n11   v10 = invokevirtual < Application, LMathVector, dotProduct()D > v4 @21 exception:v9\l" -> "BB7\n13   v12 = binaryop(add) v10 , v11:#0.0025000000000000005\l16   v14 = invokestatic < Application, Ljava/lang/Math, sqrt(D)D > v12 @30 exception:v13\l" 
 "BB7\n13   v12 = binaryop(add) v10 , v11:#0.0025000000000000005\l16   v14 = invokestatic < Application, Ljava/lang/Math, sqrt(D)D > v12 @30 exception:v13\l" -> "BB8\n19  GetOSSAInstruction:	15= O1_1< mass>      \l" 
 "BB8\n19  GetOSSAInstruction:	15= O1_1< mass>      \l" -> "BB9\n21   v16 = binaryop(div) v15 , v14           \l25  GetOSSAInstruction:	17= O2_1< phi0>      \l" 
 "BB9\n21   v16 = binaryop(div) v15 , v14           \l25  GetOSSAInstruction:	17= O2_1< phi0>      \l" -> "BB10\n27   v18 = binaryop(sub) v17 , v16           \l28  PutOSSAInstruction:	O2_1< phi0 > = O2_1<V18>\l" 
 "BB10\n27   v18 = binaryop(sub) v17 , v16           \l28  PutOSSAInstruction:	O2_1< phi0 > = O2_1<V18>\l" -> "BB11\n31   v19 = binaryop(div) v16 , v12           \l35   invokevirtual < Application, LMathVector, multScalar(D)V > v4,v19 @64 exception:v20\l" 
 "BB11\n31   v19 = binaryop(div) v16 , v12           \l35   invokevirtual < Application, LMathVector, multScalar(D)V > v4,v19 @64 exception:v20\l" -> "BB12\n37  GetOSSAInstruction:	O6_1= O2_1< acc0>    \l" 
 "BB12\n37  GetOSSAInstruction:	O6_1= O2_1< acc0>    \l" -> "BB13\n39   invokevirtual < Application, LMathVector, addition(LMathVector;)V > v21,v4 @72 exception:v22\l" 
 "BB13\n39   invokevirtual < Application, LMathVector, addition(LMathVector;)V > v21,v4 @72 exception:v22\l" -> "BB14\n41   return v2                               \l" 
 "BB14\n41   return v2                               \l" -> "BB15 (ex)\n\n" 

}