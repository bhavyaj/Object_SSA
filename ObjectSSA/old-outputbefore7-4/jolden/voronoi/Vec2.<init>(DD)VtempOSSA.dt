digraph "DirectedGraph" {
graph [label = "Object SSA for Vec2.<init>(DD)V", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1   invokespecial < Application, Ljava/lang/Object, <init>()V > v1 @1 exception:v5\l" [ ]
   "BB2\n4  PutOSSAInstruction:	O1_1< x > = O1_1<V2>  \l" [ ]
   "BB3\n7  PutOSSAInstruction:	O1_2< y > = O1_1<V3>  \l" [ ]
   "BB4\n10  GetOSSAInstruction:	6= O1_2< x>          \l" [ ]
   "BB5\n12  GetOSSAInstruction:	7= O1_2< x>          \l" [ ]
   "BB6\n13   v8 = binaryop(mul) v6 , v7              \l15  GetOSSAInstruction:	9= O1_2< y>          \l" [ ]
   "BB7\n17  GetOSSAInstruction:	10= O1_2< y>         \l" [ ]
   "BB8\n18   v11 = binaryop(mul) v9 , v10            \l19   v12 = binaryop(add) v8 , v11            \l20  PutOSSAInstruction:	O1_3< norm > = O1_2<V12>\l" [ ]
   "BB9\n21  return                                   \l" [ ]
   "BB10 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1   invokespecial < Application, Ljava/lang/Object, <init>()V > v1 @1 exception:v5\l" 
 "BB1\n1   invokespecial < Application, Ljava/lang/Object, <init>()V > v1 @1 exception:v5\l" -> "BB2\n4  PutOSSAInstruction:	O1_1< x > = O1_1<V2>  \l" 
 "BB2\n4  PutOSSAInstruction:	O1_1< x > = O1_1<V2>  \l" -> "BB3\n7  PutOSSAInstruction:	O1_2< y > = O1_1<V3>  \l" 
 "BB3\n7  PutOSSAInstruction:	O1_2< y > = O1_1<V3>  \l" -> "BB4\n10  GetOSSAInstruction:	6= O1_2< x>          \l" 
 "BB4\n10  GetOSSAInstruction:	6= O1_2< x>          \l" -> "BB5\n12  GetOSSAInstruction:	7= O1_2< x>          \l" 
 "BB5\n12  GetOSSAInstruction:	7= O1_2< x>          \l" -> "BB6\n13   v8 = binaryop(mul) v6 , v7              \l15  GetOSSAInstruction:	9= O1_2< y>          \l" 
 "BB6\n13   v8 = binaryop(mul) v6 , v7              \l15  GetOSSAInstruction:	9= O1_2< y>          \l" -> "BB7\n17  GetOSSAInstruction:	10= O1_2< y>         \l" 
 "BB7\n17  GetOSSAInstruction:	10= O1_2< y>         \l" -> "BB8\n18   v11 = binaryop(mul) v9 , v10            \l19   v12 = binaryop(add) v8 , v11            \l20  PutOSSAInstruction:	O1_3< norm > = O1_2<V12>\l" 
 "BB8\n18   v11 = binaryop(mul) v9 , v10            \l19   v12 = binaryop(add) v8 , v11            \l20  PutOSSAInstruction:	O1_3< norm > = O1_2<V12>\l" -> "BB9\n21  return                                   \l" 
 "BB9\n21  return                                   \l" -> "BB10 (ex)\n\n" 

}