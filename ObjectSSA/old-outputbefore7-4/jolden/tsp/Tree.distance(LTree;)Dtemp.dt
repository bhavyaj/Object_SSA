digraph "DirectedGraph" {
graph [concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1   v4 = getfield < Application, LTree, x, <Primordial,D> > v1\l" [ ]
   "BB2\n3   v5 = getfield < Application, LTree, x, <Primordial,D> > v2\l" [ ]
   "BB3\n4   v6 = binaryop(sub) v4 , v5     \l6   v7 = getfield < Application, LTree, x, <Primordial,D> > v1\l" [ ]
   "BB4\n8   v8 = getfield < Application, LTree, x, <Primordial,D> > v2\l" [ ]
   "BB5\n9   v9 = binaryop(sub) v7 , v8     \l10   v10 = binaryop(mul) v6 , v9   \l12   v11 = getfield < Application, LTree, y, <Primordial,D> > v1\l" [ ]
   "BB6\n14   v12 = getfield < Application, LTree, y, <Primordial,D> > v2\l" [ ]
   "BB7\n15   v13 = binaryop(sub) v11 , v12 \l17   v14 = getfield < Application, LTree, y, <Primordial,D> > v1\l" [ ]
   "BB8\n19   v15 = getfield < Application, LTree, y, <Primordial,D> > v2\l" [ ]
   "BB9\n20   v16 = binaryop(sub) v14 , v15 \l21   v17 = binaryop(mul) v13 , v16 \l22   v18 = binaryop(add) v10 , v17 \l23   v20 = invokestatic < Application, Ljava/lang/Math, sqrt(D)D > v18 @39 exception:v19\l" [ ]
   "BB10\n24   return v20                    \l" [ ]
   "BB11 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1   v4 = getfield < Application, LTree, x, <Primordial,D> > v1\l" 
 "BB1\n1   v4 = getfield < Application, LTree, x, <Primordial,D> > v1\l" -> "BB2\n3   v5 = getfield < Application, LTree, x, <Primordial,D> > v2\l" 
 "BB2\n3   v5 = getfield < Application, LTree, x, <Primordial,D> > v2\l" -> "BB3\n4   v6 = binaryop(sub) v4 , v5     \l6   v7 = getfield < Application, LTree, x, <Primordial,D> > v1\l" 
 "BB3\n4   v6 = binaryop(sub) v4 , v5     \l6   v7 = getfield < Application, LTree, x, <Primordial,D> > v1\l" -> "BB4\n8   v8 = getfield < Application, LTree, x, <Primordial,D> > v2\l" 
 "BB4\n8   v8 = getfield < Application, LTree, x, <Primordial,D> > v2\l" -> "BB5\n9   v9 = binaryop(sub) v7 , v8     \l10   v10 = binaryop(mul) v6 , v9   \l12   v11 = getfield < Application, LTree, y, <Primordial,D> > v1\l" 
 "BB5\n9   v9 = binaryop(sub) v7 , v8     \l10   v10 = binaryop(mul) v6 , v9   \l12   v11 = getfield < Application, LTree, y, <Primordial,D> > v1\l" -> "BB6\n14   v12 = getfield < Application, LTree, y, <Primordial,D> > v2\l" 
 "BB6\n14   v12 = getfield < Application, LTree, y, <Primordial,D> > v2\l" -> "BB7\n15   v13 = binaryop(sub) v11 , v12 \l17   v14 = getfield < Application, LTree, y, <Primordial,D> > v1\l" 
 "BB7\n15   v13 = binaryop(sub) v11 , v12 \l17   v14 = getfield < Application, LTree, y, <Primordial,D> > v1\l" -> "BB8\n19   v15 = getfield < Application, LTree, y, <Primordial,D> > v2\l" 
 "BB8\n19   v15 = getfield < Application, LTree, y, <Primordial,D> > v2\l" -> "BB9\n20   v16 = binaryop(sub) v14 , v15 \l21   v17 = binaryop(mul) v13 , v16 \l22   v18 = binaryop(add) v10 , v17 \l23   v20 = invokestatic < Application, Ljava/lang/Math, sqrt(D)D > v18 @39 exception:v19\l" 
 "BB9\n20   v16 = binaryop(sub) v14 , v15 \l21   v17 = binaryop(mul) v13 , v16 \l22   v18 = binaryop(add) v10 , v17 \l23   v20 = invokestatic < Application, Ljava/lang/Math, sqrt(D)D > v18 @39 exception:v19\l" -> "BB10\n24   return v20                    \l" 
 "BB10\n24   return v20                    \l" -> "BB11 (ex)\n\n" 

}