digraph "DirectedGraph" {
graph [label = "Object SSA for TestProg2.test()V", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n0  Create O1_1                               \l" [ ]
   "BB2\n2   invokespecial < Application, LSample, <init>()V > v2 @4 exception:v3\l" [ ]
   "BB3\n8   conditional branch(ge) v4:#7,v5:#5       \l" [ ]
   "BB4\n11  PutOSSAInstruction:	O1_2< x > = O1_1<V10>\l" [ ]
   "BB5\n12   goto                                    \l" [ ]
   "BB6\n15   conditional branch(le) v4:#7,v5:#5      \l" [ ]
   "BB7\n18   conditional branch(ge) v4:#7,v4:#7      \l" [ ]
   "BB8\n21  PutOSSAInstruction:	O1_3< x > = O1_1<V9> \l" [ ]
   "BB9\n22   goto                                    \l" [ ]
   "BB10\n25   conditional branch(le) v4:#7,v4:#7      \l" [ ]
   "BB11\n28   conditional branch(ge) v4:#7,v6:#9      \l" [ ]
   "BB12\n31  PutOSSAInstruction:	O1_4< x > = O1_1<V8> \l" [ ]
   "BB13\n32   goto                                    \l" [ ]
   "BB14\n35  PutOSSAInstruction:	O1_5< x > = O1_1<V7> \l" [ ]
   "BB15\n           O1_6 = Object-Phi(O1_2, O1_3, O1_4, O1_5 )\l37  GetOSSAInstruction:	11= O1_6< x>         \l" [ ]
   "BB16\n39  return                                   \l" [ ]
   "BB17 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n0  Create O1_1                               \l" 
 "BB1\n0  Create O1_1                               \l" -> "BB2\n2   invokespecial < Application, LSample, <init>()V > v2 @4 exception:v3\l" 
 "BB2\n2   invokespecial < Application, LSample, <init>()V > v2 @4 exception:v3\l" -> "BB3\n8   conditional branch(ge) v4:#7,v5:#5       \l" 
 "BB3\n8   conditional branch(ge) v4:#7,v5:#5       \l" -> "BB4\n11  PutOSSAInstruction:	O1_2< x > = O1_1<V10>\l" 
 "BB3\n8   conditional branch(ge) v4:#7,v5:#5       \l" -> "BB6\n15   conditional branch(le) v4:#7,v5:#5      \l" 
 "BB4\n11  PutOSSAInstruction:	O1_2< x > = O1_1<V10>\l" -> "BB5\n12   goto                                    \l" 
 "BB5\n12   goto                                    \l" -> "BB15\n           O1_6 = Object-Phi(O1_2, O1_3, O1_4, O1_5 )\l37  GetOSSAInstruction:	11= O1_6< x>         \l" 
 "BB6\n15   conditional branch(le) v4:#7,v5:#5      \l" -> "BB7\n18   conditional branch(ge) v4:#7,v4:#7      \l" 
 "BB6\n15   conditional branch(le) v4:#7,v5:#5      \l" -> "BB10\n25   conditional branch(le) v4:#7,v4:#7      \l" 
 "BB7\n18   conditional branch(ge) v4:#7,v4:#7      \l" -> "BB8\n21  PutOSSAInstruction:	O1_3< x > = O1_1<V9> \l" 
 "BB7\n18   conditional branch(ge) v4:#7,v4:#7      \l" -> "BB10\n25   conditional branch(le) v4:#7,v4:#7      \l" 
 "BB8\n21  PutOSSAInstruction:	O1_3< x > = O1_1<V9> \l" -> "BB9\n22   goto                                    \l" 
 "BB9\n22   goto                                    \l" -> "BB15\n           O1_6 = Object-Phi(O1_2, O1_3, O1_4, O1_5 )\l37  GetOSSAInstruction:	11= O1_6< x>         \l" 
 "BB10\n25   conditional branch(le) v4:#7,v4:#7      \l" -> "BB11\n28   conditional branch(ge) v4:#7,v6:#9      \l" 
 "BB10\n25   conditional branch(le) v4:#7,v4:#7      \l" -> "BB14\n35  PutOSSAInstruction:	O1_5< x > = O1_1<V7> \l" 
 "BB11\n28   conditional branch(ge) v4:#7,v6:#9      \l" -> "BB12\n31  PutOSSAInstruction:	O1_4< x > = O1_1<V8> \l" 
 "BB11\n28   conditional branch(ge) v4:#7,v6:#9      \l" -> "BB14\n35  PutOSSAInstruction:	O1_5< x > = O1_1<V7> \l" 
 "BB12\n31  PutOSSAInstruction:	O1_4< x > = O1_1<V8> \l" -> "BB13\n32   goto                                    \l" 
 "BB13\n32   goto                                    \l" -> "BB15\n           O1_6 = Object-Phi(O1_2, O1_3, O1_4, O1_5 )\l37  GetOSSAInstruction:	11= O1_6< x>         \l" 
 "BB14\n35  PutOSSAInstruction:	O1_5< x > = O1_1<V7> \l" -> "BB15\n           O1_6 = Object-Phi(O1_2, O1_3, O1_4, O1_5 )\l37  GetOSSAInstruction:	11= O1_6< x>         \l" 
 "BB15\n           O1_6 = Object-Phi(O1_2, O1_3, O1_4, O1_5 )\l37  GetOSSAInstruction:	11= O1_6< x>         \l" -> "BB16\n39  return                                   \l" 
 "BB16\n39  return                                   \l" -> "BB17 (ex)\n\n" 

}