digraph "DirectedGraph" {
graph [label = "Object SSA for prabhuprog.bar()V", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n0  Create O1_1                               \l" [ ]
   "BB2\n2   invokespecial < Application, LSample, <init>()V > v2 @4 exception:v3\l" [ ]
   "BB3\n4  Create O2_1                               \l" [ ]
   "BB4\n6   invokespecial < Application, LSample, <init>()V > v4 @12 exception:v5\l" [ ]
   "BB5\n8  Create O3_1                               \l" [ ]
   "BB6\n10   invokespecial < Application, LSample, <init>()V > v6 @20 exception:v7\l" [ ]
   "BB7\n14  PutOSSAInstruction:	O1_2< next > = O1_1<refO2_1>\l" [ ]
   "BB8\n16   v9 = invokestatic < Application, Lprabhuprog, helper(LSample;)LSample; > v2 @30 exception:v8\l" [ ]
   "BB9\n22  PutOSSAInstruction:	O1_3< next > = O1_2<refO3_1>\l" [ ]
   "BB10\n25  PutOSSAInstruction:	O1_4< next > = O1_3<refO2_1>\l" [ ]
   "BB11\n27  GetOSSAInstruction:	10= O1_4< x>         \l" [ ]
   "BB12\n31   conditional branch(le) v10,v11:#4       \l" [ ]
   "BB13\n34  PutOSSAInstruction:	O1_5< next > = O1_4<refO3_1>\l" [ ]
   "BB14\n" [ ]
   "BB15\n           O1_6 = Object-Phi(O1_4, O1_5 )\l           O4_1 = diff-Object-Phi(O1_4, O2_1 )\l           v12 = phi  v2,v4\l38  GetOSSAInstruction:	13= O4_1< x>         \l" [ ]
   "BB16\n40  return                                   \l" [ ]
   "BB17 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n0  Create O1_1                               \l" 
 "BB1\n0  Create O1_1                               \l" -> "BB2\n2   invokespecial < Application, LSample, <init>()V > v2 @4 exception:v3\l" 
 "BB2\n2   invokespecial < Application, LSample, <init>()V > v2 @4 exception:v3\l" -> "BB3\n4  Create O2_1                               \l" 
 "BB3\n4  Create O2_1                               \l" -> "BB4\n6   invokespecial < Application, LSample, <init>()V > v4 @12 exception:v5\l" 
 "BB4\n6   invokespecial < Application, LSample, <init>()V > v4 @12 exception:v5\l" -> "BB5\n8  Create O3_1                               \l" 
 "BB5\n8  Create O3_1                               \l" -> "BB6\n10   invokespecial < Application, LSample, <init>()V > v6 @20 exception:v7\l" 
 "BB6\n10   invokespecial < Application, LSample, <init>()V > v6 @20 exception:v7\l" -> "BB7\n14  PutOSSAInstruction:	O1_2< next > = O1_1<refO2_1>\l" 
 "BB7\n14  PutOSSAInstruction:	O1_2< next > = O1_1<refO2_1>\l" -> "BB8\n16   v9 = invokestatic < Application, Lprabhuprog, helper(LSample;)LSample; > v2 @30 exception:v8\l" 
 "BB8\n16   v9 = invokestatic < Application, Lprabhuprog, helper(LSample;)LSample; > v2 @30 exception:v8\l" -> "BB9\n22  PutOSSAInstruction:	O1_3< next > = O1_2<refO3_1>\l" 
 "BB9\n22  PutOSSAInstruction:	O1_3< next > = O1_2<refO3_1>\l" -> "BB10\n25  PutOSSAInstruction:	O1_4< next > = O1_3<refO2_1>\l" 
 "BB10\n25  PutOSSAInstruction:	O1_4< next > = O1_3<refO2_1>\l" -> "BB11\n27  GetOSSAInstruction:	10= O1_4< x>         \l" 
 "BB11\n27  GetOSSAInstruction:	10= O1_4< x>         \l" -> "BB12\n31   conditional branch(le) v10,v11:#4       \l" 
 "BB12\n31   conditional branch(le) v10,v11:#4       \l" -> "BB13\n34  PutOSSAInstruction:	O1_5< next > = O1_4<refO3_1>\l" 
 "BB12\n31   conditional branch(le) v10,v11:#4       \l" -> "BB15\n           O1_6 = Object-Phi(O1_4, O1_5 )\l           O4_1 = diff-Object-Phi(O1_4, O2_1 )\l           v12 = phi  v2,v4\l38  GetOSSAInstruction:	13= O4_1< x>         \l" 
 "BB13\n34  PutOSSAInstruction:	O1_5< next > = O1_4<refO3_1>\l" -> "BB14\n" 
 "BB14\n" -> "BB15\n           O1_6 = Object-Phi(O1_4, O1_5 )\l           O4_1 = diff-Object-Phi(O1_4, O2_1 )\l           v12 = phi  v2,v4\l38  GetOSSAInstruction:	13= O4_1< x>         \l" 
 "BB15\n           O1_6 = Object-Phi(O1_4, O1_5 )\l           O4_1 = diff-Object-Phi(O1_4, O2_1 )\l           v12 = phi  v2,v4\l38  GetOSSAInstruction:	13= O4_1< x>         \l" -> "BB16\n40  return                                   \l" 
 "BB16\n40  return                                   \l" -> "BB17 (ex)\n\n" 

}