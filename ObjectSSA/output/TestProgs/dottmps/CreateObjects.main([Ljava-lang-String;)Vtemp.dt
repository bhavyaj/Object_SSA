digraph "DirectedGraph" {
graph [concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n0   v3 = new <Application,LSample>@0\l" [ ]
   "BB2\n2   invokespecial < Application, LSample, <init>()V > v3 @4 exception:v4\l" [ ]
   "BB3\n8   goto                           \l" [ ]
   "BB4\n10   v7 = new <Application,LSample>@16\l" [ ]
   "BB5\n12   invokespecial < Application, LSample, <init>()V > v7 @20 exception:v8\l" [ ]
   "BB6\n13   putfield v11 = v7 < Application, LSample, next, <Application,LSample> >\l" [ ]
   "BB7\n15   v9 = getfield < Application, LSample, next, <Application,LSample> > v11\l" [ ]
   "BB8\n19   v10 = binaryop(add) v12 , v5:#1\l" [ ]
   "BB9\n           v11 = phi  v3,v9\l           v12 = phi  v5:#1,v10\l23   conditional branch(lt) v12,v6:#5\l" [ ]
   "BB10\n25   v13 = getfield < Application, LSample, next, <Application,LSample> > v3\l" [ ]
   "BB11\n26   v14 = getfield < Application, LSample, next, <Application,LSample> > v13\l" [ ]
   "BB12\n27   v15 = new <Application,LSample>@46\l" [ ]
   "BB13\n29   invokespecial < Application, LSample, <init>()V > v15 @50 exception:v16\l" [ ]
   "BB14\n30   putfield v14 = v15 < Application, LSample, next, <Application,LSample> >\l" [ ]
   "BB15\n32   v17 = getfield < Application, LSample, next, <Application,LSample> > v3\l" [ ]
   "BB16\n35   v18 = getfield < Application, LSample, next, <Application,LSample> > v3\l" [ ]
   "BB17\n36   v19 = getfield < Application, LSample, next, <Application,LSample> > v18\l" [ ]
   "BB18\n39   invokestatic < Application, LCreateObjects, pointstodump(Ljava/lang/Object;)V > v19 @72 exception:v20\l" [ ]
   "BB19\n40   invokestatic < Application, LCreateObjects, func()V > @75 exception:v21\l" [ ]
   "BB20\n42   v22 = getfield < Application, LSample, x, <Primordial,I> > v19\l" [ ]
   "BB21\n44   return                        \l" [ ]
   "BB22 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n0   v3 = new <Application,LSample>@0\l" 
 "BB1\n0   v3 = new <Application,LSample>@0\l" -> "BB2\n2   invokespecial < Application, LSample, <init>()V > v3 @4 exception:v4\l" 
 "BB2\n2   invokespecial < Application, LSample, <init>()V > v3 @4 exception:v4\l" -> "BB3\n8   goto                           \l" 
 "BB3\n8   goto                           \l" -> "BB9\n           v11 = phi  v3,v9\l           v12 = phi  v5:#1,v10\l23   conditional branch(lt) v12,v6:#5\l" 
 "BB4\n10   v7 = new <Application,LSample>@16\l" -> "BB5\n12   invokespecial < Application, LSample, <init>()V > v7 @20 exception:v8\l" 
 "BB5\n12   invokespecial < Application, LSample, <init>()V > v7 @20 exception:v8\l" -> "BB6\n13   putfield v11 = v7 < Application, LSample, next, <Application,LSample> >\l" 
 "BB6\n13   putfield v11 = v7 < Application, LSample, next, <Application,LSample> >\l" -> "BB7\n15   v9 = getfield < Application, LSample, next, <Application,LSample> > v11\l" 
 "BB7\n15   v9 = getfield < Application, LSample, next, <Application,LSample> > v11\l" -> "BB8\n19   v10 = binaryop(add) v12 , v5:#1\l" 
 "BB8\n19   v10 = binaryop(add) v12 , v5:#1\l" -> "BB9\n           v11 = phi  v3,v9\l           v12 = phi  v5:#1,v10\l23   conditional branch(lt) v12,v6:#5\l" 
 "BB9\n           v11 = phi  v3,v9\l           v12 = phi  v5:#1,v10\l23   conditional branch(lt) v12,v6:#5\l" -> "BB4\n10   v7 = new <Application,LSample>@16\l" 
 "BB9\n           v11 = phi  v3,v9\l           v12 = phi  v5:#1,v10\l23   conditional branch(lt) v12,v6:#5\l" -> "BB10\n25   v13 = getfield < Application, LSample, next, <Application,LSample> > v3\l" 
 "BB10\n25   v13 = getfield < Application, LSample, next, <Application,LSample> > v3\l" -> "BB11\n26   v14 = getfield < Application, LSample, next, <Application,LSample> > v13\l" 
 "BB11\n26   v14 = getfield < Application, LSample, next, <Application,LSample> > v13\l" -> "BB12\n27   v15 = new <Application,LSample>@46\l" 
 "BB12\n27   v15 = new <Application,LSample>@46\l" -> "BB13\n29   invokespecial < Application, LSample, <init>()V > v15 @50 exception:v16\l" 
 "BB13\n29   invokespecial < Application, LSample, <init>()V > v15 @50 exception:v16\l" -> "BB14\n30   putfield v14 = v15 < Application, LSample, next, <Application,LSample> >\l" 
 "BB14\n30   putfield v14 = v15 < Application, LSample, next, <Application,LSample> >\l" -> "BB15\n32   v17 = getfield < Application, LSample, next, <Application,LSample> > v3\l" 
 "BB15\n32   v17 = getfield < Application, LSample, next, <Application,LSample> > v3\l" -> "BB16\n35   v18 = getfield < Application, LSample, next, <Application,LSample> > v3\l" 
 "BB16\n35   v18 = getfield < Application, LSample, next, <Application,LSample> > v3\l" -> "BB17\n36   v19 = getfield < Application, LSample, next, <Application,LSample> > v18\l" 
 "BB17\n36   v19 = getfield < Application, LSample, next, <Application,LSample> > v18\l" -> "BB18\n39   invokestatic < Application, LCreateObjects, pointstodump(Ljava/lang/Object;)V > v19 @72 exception:v20\l" 
 "BB18\n39   invokestatic < Application, LCreateObjects, pointstodump(Ljava/lang/Object;)V > v19 @72 exception:v20\l" -> "BB19\n40   invokestatic < Application, LCreateObjects, func()V > @75 exception:v21\l" 
 "BB19\n40   invokestatic < Application, LCreateObjects, func()V > @75 exception:v21\l" -> "BB20\n42   v22 = getfield < Application, LSample, x, <Primordial,I> > v19\l" 
 "BB20\n42   v22 = getfield < Application, LSample, x, <Primordial,I> > v19\l" -> "BB21\n44   return                        \l" 
 "BB21\n44   return                        \l" -> "BB22 (ex)\n\n" 

}