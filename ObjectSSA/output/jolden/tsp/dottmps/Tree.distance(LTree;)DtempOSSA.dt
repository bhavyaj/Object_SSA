digraph "DirectedGraph" {
graph [label = "Object SSA for Tree.distance(LTree;)D", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1  GetOSSAInstruction:	4= O1_1< x>           \l" [ ]
   "BB2\n3  GetOSSAInstruction:	5= O2_1< x>           \l" [ ]
   "BB3\n4   v6 = binaryop(sub) v4 , v5               \l6  GetOSSAInstruction:	7= O1_1< x>           \l" [ ]
   "BB4\n8  GetOSSAInstruction:	8= O2_1< x>           \l" [ ]
   "BB5\n9   v9 = binaryop(sub) v7 , v8               \l10   v10 = binaryop(mul) v6 , v9             \l12  GetOSSAInstruction:	11= O1_1< y>         \l" [ ]
   "BB6\n14  GetOSSAInstruction:	12= O2_1< y>         \l" [ ]
   "BB7\n15   v13 = binaryop(sub) v11 , v12           \l17  GetOSSAInstruction:	14= O1_1< y>         \l" [ ]
   "BB8\n19  GetOSSAInstruction:	15= O2_1< y>         \l" [ ]
   "BB9\n20   v16 = binaryop(sub) v14 , v15           \l21   v17 = binaryop(mul) v13 , v16           \l22   v18 = binaryop(add) v10 , v17           \l23  O3_1 = < Application, Ljava/lang/Math, sqrt(D)D >( V18 )\l" [ ]
   "BB10\n24  Return O3_1                              \l" [ ]
   "BB11 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1  GetOSSAInstruction:	4= O1_1< x>           \l" 
 "BB1\n1  GetOSSAInstruction:	4= O1_1< x>           \l" -> "BB2\n3  GetOSSAInstruction:	5= O2_1< x>           \l" 
 "BB2\n3  GetOSSAInstruction:	5= O2_1< x>           \l" -> "BB3\n4   v6 = binaryop(sub) v4 , v5               \l6  GetOSSAInstruction:	7= O1_1< x>           \l" 
 "BB3\n4   v6 = binaryop(sub) v4 , v5               \l6  GetOSSAInstruction:	7= O1_1< x>           \l" -> "BB4\n8  GetOSSAInstruction:	8= O2_1< x>           \l" 
 "BB4\n8  GetOSSAInstruction:	8= O2_1< x>           \l" -> "BB5\n9   v9 = binaryop(sub) v7 , v8               \l10   v10 = binaryop(mul) v6 , v9             \l12  GetOSSAInstruction:	11= O1_1< y>         \l" 
 "BB5\n9   v9 = binaryop(sub) v7 , v8               \l10   v10 = binaryop(mul) v6 , v9             \l12  GetOSSAInstruction:	11= O1_1< y>         \l" -> "BB6\n14  GetOSSAInstruction:	12= O2_1< y>         \l" 
 "BB6\n14  GetOSSAInstruction:	12= O2_1< y>         \l" -> "BB7\n15   v13 = binaryop(sub) v11 , v12           \l17  GetOSSAInstruction:	14= O1_1< y>         \l" 
 "BB7\n15   v13 = binaryop(sub) v11 , v12           \l17  GetOSSAInstruction:	14= O1_1< y>         \l" -> "BB8\n19  GetOSSAInstruction:	15= O2_1< y>         \l" 
 "BB8\n19  GetOSSAInstruction:	15= O2_1< y>         \l" -> "BB9\n20   v16 = binaryop(sub) v14 , v15           \l21   v17 = binaryop(mul) v13 , v16           \l22   v18 = binaryop(add) v10 , v17           \l23  O3_1 = < Application, Ljava/lang/Math, sqrt(D)D >( V18 )\l" 
 "BB9\n20   v16 = binaryop(sub) v14 , v15           \l21   v17 = binaryop(mul) v13 , v16           \l22   v18 = binaryop(add) v10 , v17           \l23  O3_1 = < Application, Ljava/lang/Math, sqrt(D)D >( V18 )\l" -> "BB10\n24  Return O3_1                              \l" 
 "BB10\n24  Return O3_1                              \l" -> "BB11 (ex)\n\n" 

}