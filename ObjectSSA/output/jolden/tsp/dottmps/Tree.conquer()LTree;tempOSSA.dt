digraph "DirectedGraph" {
graph [label = "Object SSA for Tree.conquer()LTree;", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1  O1_2 = < Application, LTree, makeList()LTree; >( O1_1 )\l" [ ]
   "BB2\n6  nonreference field get instrctn: 5 = getfield < Application, LTree, next, <Application,LTree> > 4\l" [ ]
   "BB3\n10   putfield v4 = v4 < Application, LTree, next, <Application,LTree> >\l" [ ]
   "BB4\n13   putfield v4 = v4 < Application, LTree, prev, <Application,LTree> >\l" [ ]
   "BB5\n           v34 = phi  v7,v5\l16   conditional branch(eq) v34,v6:#null     \l" [ ]
   "BB6\n18  GetOSSAInstruction:	O1_2= O1_2< next>    \l" [ ]
   "BB7\n24  O2_1 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" [ ]
   "BB8\n27  nonreference field get instrctn: 10 = getfield < Application, LTree, next, <Application,LTree> > 4\l" [ ]
   "BB9\n" [ ]
   "BB10\n           v35 = phi  v35,v34\l           v18 = phi  v15,v4\l           v19 = phi  v16,v9\l           v20 = phi  v17,v10\l31   conditional branch(eq) v20,v4           \l" [ ]
   "BB11\n34  O2_2 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" [ ]
   "BB12\n38   v13 = compare v12,v19 opcode=cmpg       \l40   conditional branch(ge) v13,v14:#0       \l" [ ]
   "BB13\n" [ ]
   "BB14\n           v15 = phi  v18,v20\l           v16 = phi  v19,v12\l46  GetOSSAInstruction:	O1_2= O1_2< next>    \l" [ ]
   "BB15\n48   goto                                    \l" [ ]
   "BB16\n50  GetOSSAInstruction:	O1_2= O1_2< next>    \l" [ ]
   "BB17\n53  GetOSSAInstruction:	O1_2= O1_2< prev>    \l" [ ]
   "BB18\n57  O2_3 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" [ ]
   "BB19\n61  O2_4 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" [ ]
   "BB20\n65  O2_5 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" [ ]
   "BB21\n69  O2_6 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" [ ]
   "BB22\n73   v31 = binaryop(sub) v30 , v26           \l76   v32 = binaryop(sub) v28 , v24           \l77   v33 = compare v31,v32 opcode=cmpg       \l79   conditional branch(ge) v33,v14:#0       \l" [ ]
   "BB23\n82  PutOSSAInstruction:	O1_3< next > = O1_2<refO1_2>\l" [ ]
   "BB24\n85  PutOSSAInstruction:	O1_4< next > = O1_3<refO1_3>\l" [ ]
   "BB25\n88  PutOSSAInstruction:	O1_5< prev > = O1_4<refO1_4>\l" [ ]
   "BB26\n91  PutOSSAInstruction:	O1_6< prev > = O1_5<refO1_5>\l" [ ]
   "BB27\n92   goto                                    \l" [ ]
   "BB28\n95  PutOSSAInstruction:	O1_7< prev > = O1_2<refO1_2>\l" [ ]
   "BB29\n98  PutOSSAInstruction:	O1_8< next > = O1_7<refO1_7>\l" [ ]
   "BB30\n101  PutOSSAInstruction:	O1_9< next > = O1_8<refO1_8>\l" [ ]
   "BB31\n104  PutOSSAInstruction:	O1_10< prev > = O1_9<refO1_9>\l" [ ]
   "BB32\n           O1_11 = Object-Phi(O1_6, O1_10 )\l107   goto                                   \l" [ ]
   "BB33\n109  Return O1_2                             \l" [ ]
   "BB34 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1  O1_2 = < Application, LTree, makeList()LTree; >( O1_1 )\l" 
 "BB1\n1  O1_2 = < Application, LTree, makeList()LTree; >( O1_1 )\l" -> "BB2\n6  nonreference field get instrctn: 5 = getfield < Application, LTree, next, <Application,LTree> > 4\l" 
 "BB2\n6  nonreference field get instrctn: 5 = getfield < Application, LTree, next, <Application,LTree> > 4\l" -> "BB3\n10   putfield v4 = v4 < Application, LTree, next, <Application,LTree> >\l" 
 "BB3\n10   putfield v4 = v4 < Application, LTree, next, <Application,LTree> >\l" -> "BB4\n13   putfield v4 = v4 < Application, LTree, prev, <Application,LTree> >\l" 
 "BB4\n13   putfield v4 = v4 < Application, LTree, prev, <Application,LTree> >\l" -> "BB5\n           v34 = phi  v7,v5\l16   conditional branch(eq) v34,v6:#null     \l" 
 "BB5\n           v34 = phi  v7,v5\l16   conditional branch(eq) v34,v6:#null     \l" -> "BB6\n18  GetOSSAInstruction:	O1_2= O1_2< next>    \l" 
 "BB5\n           v34 = phi  v7,v5\l16   conditional branch(eq) v34,v6:#null     \l" -> "BB33\n109  Return O1_2                             \l" 
 "BB6\n18  GetOSSAInstruction:	O1_2= O1_2< next>    \l" -> "BB7\n24  O2_1 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" 
 "BB7\n24  O2_1 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" -> "BB8\n27  nonreference field get instrctn: 10 = getfield < Application, LTree, next, <Application,LTree> > 4\l" 
 "BB8\n27  nonreference field get instrctn: 10 = getfield < Application, LTree, next, <Application,LTree> > 4\l" -> "BB9\n" 
 "BB9\n" -> "BB10\n           v35 = phi  v35,v34\l           v18 = phi  v15,v4\l           v19 = phi  v16,v9\l           v20 = phi  v17,v10\l31   conditional branch(eq) v20,v4           \l" 
 "BB10\n           v35 = phi  v35,v34\l           v18 = phi  v15,v4\l           v19 = phi  v16,v9\l           v20 = phi  v17,v10\l31   conditional branch(eq) v20,v4           \l" -> "BB11\n34  O2_2 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" 
 "BB10\n           v35 = phi  v35,v34\l           v18 = phi  v15,v4\l           v19 = phi  v16,v9\l           v20 = phi  v17,v10\l31   conditional branch(eq) v20,v4           \l" -> "BB16\n50  GetOSSAInstruction:	O1_2= O1_2< next>    \l" 
 "BB11\n34  O2_2 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" -> "BB12\n38   v13 = compare v12,v19 opcode=cmpg       \l40   conditional branch(ge) v13,v14:#0       \l" 
 "BB12\n38   v13 = compare v12,v19 opcode=cmpg       \l40   conditional branch(ge) v13,v14:#0       \l" -> "BB13\n" 
 "BB12\n38   v13 = compare v12,v19 opcode=cmpg       \l40   conditional branch(ge) v13,v14:#0       \l" -> "BB14\n           v15 = phi  v18,v20\l           v16 = phi  v19,v12\l46  GetOSSAInstruction:	O1_2= O1_2< next>    \l" 
 "BB13\n" -> "BB14\n           v15 = phi  v18,v20\l           v16 = phi  v19,v12\l46  GetOSSAInstruction:	O1_2= O1_2< next>    \l" 
 "BB14\n           v15 = phi  v18,v20\l           v16 = phi  v19,v12\l46  GetOSSAInstruction:	O1_2= O1_2< next>    \l" -> "BB15\n48   goto                                    \l" 
 "BB15\n48   goto                                    \l" -> "BB10\n           v35 = phi  v35,v34\l           v18 = phi  v15,v4\l           v19 = phi  v16,v9\l           v20 = phi  v17,v10\l31   conditional branch(eq) v20,v4           \l" 
 "BB16\n50  GetOSSAInstruction:	O1_2= O1_2< next>    \l" -> "BB17\n53  GetOSSAInstruction:	O1_2= O1_2< prev>    \l" 
 "BB17\n53  GetOSSAInstruction:	O1_2= O1_2< prev>    \l" -> "BB18\n57  O2_3 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" 
 "BB18\n57  O2_3 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" -> "BB19\n61  O2_4 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" 
 "BB19\n61  O2_4 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" -> "BB20\n65  O2_5 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" 
 "BB20\n65  O2_5 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" -> "BB21\n69  O2_6 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" 
 "BB21\n69  O2_6 = < Application, LTree, distance(LTree;)D >( O1_2, O1_2 )\l" -> "BB22\n73   v31 = binaryop(sub) v30 , v26           \l76   v32 = binaryop(sub) v28 , v24           \l77   v33 = compare v31,v32 opcode=cmpg       \l79   conditional branch(ge) v33,v14:#0       \l" 
 "BB22\n73   v31 = binaryop(sub) v30 , v26           \l76   v32 = binaryop(sub) v28 , v24           \l77   v33 = compare v31,v32 opcode=cmpg       \l79   conditional branch(ge) v33,v14:#0       \l" -> "BB23\n82  PutOSSAInstruction:	O1_3< next > = O1_2<refO1_2>\l" 
 "BB22\n73   v31 = binaryop(sub) v30 , v26           \l76   v32 = binaryop(sub) v28 , v24           \l77   v33 = compare v31,v32 opcode=cmpg       \l79   conditional branch(ge) v33,v14:#0       \l" -> "BB28\n95  PutOSSAInstruction:	O1_7< prev > = O1_2<refO1_2>\l" 
 "BB23\n82  PutOSSAInstruction:	O1_3< next > = O1_2<refO1_2>\l" -> "BB24\n85  PutOSSAInstruction:	O1_4< next > = O1_3<refO1_3>\l" 
 "BB24\n85  PutOSSAInstruction:	O1_4< next > = O1_3<refO1_3>\l" -> "BB25\n88  PutOSSAInstruction:	O1_5< prev > = O1_4<refO1_4>\l" 
 "BB25\n88  PutOSSAInstruction:	O1_5< prev > = O1_4<refO1_4>\l" -> "BB26\n91  PutOSSAInstruction:	O1_6< prev > = O1_5<refO1_5>\l" 
 "BB26\n91  PutOSSAInstruction:	O1_6< prev > = O1_5<refO1_5>\l" -> "BB27\n92   goto                                    \l" 
 "BB27\n92   goto                                    \l" -> "BB32\n           O1_11 = Object-Phi(O1_6, O1_10 )\l107   goto                                   \l" 
 "BB28\n95  PutOSSAInstruction:	O1_7< prev > = O1_2<refO1_2>\l" -> "BB29\n98  PutOSSAInstruction:	O1_8< next > = O1_7<refO1_7>\l" 
 "BB29\n98  PutOSSAInstruction:	O1_8< next > = O1_7<refO1_7>\l" -> "BB30\n101  PutOSSAInstruction:	O1_9< next > = O1_8<refO1_8>\l" 
 "BB30\n101  PutOSSAInstruction:	O1_9< next > = O1_8<refO1_8>\l" -> "BB31\n104  PutOSSAInstruction:	O1_10< prev > = O1_9<refO1_9>\l" 
 "BB31\n104  PutOSSAInstruction:	O1_10< prev > = O1_9<refO1_9>\l" -> "BB32\n           O1_11 = Object-Phi(O1_6, O1_10 )\l107   goto                                   \l" 
 "BB32\n           O1_11 = Object-Phi(O1_6, O1_10 )\l107   goto                                   \l" -> "BB5\n           v34 = phi  v7,v5\l16   conditional branch(eq) v34,v6:#null     \l" 
 "BB33\n109  Return O1_2                             \l" -> "BB34 (ex)\n\n" 

}