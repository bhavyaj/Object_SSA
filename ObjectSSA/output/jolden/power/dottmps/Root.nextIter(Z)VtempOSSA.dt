digraph "DirectedGraph" {
graph [label = "Object SSA for Root.nextIter(Z)V", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1  GetOSSAInstruction:	4= O1_1< theta_R>     \l" [ ]
   "BB2\n3   v6 = binaryop(sub) v4 , v5:#0.65         \l5   v8 = binaryop(div) v6 , v7:#0.01         \l6   v9 = conversion(I) v8                    \l10   conditional branch(ge) v9,v10:#0        \l" [ ]
   "BB3\n" [ ]
   "BB4\n           v11 = phi  v9,v10:#0\l15   conditional branch(le) v11,v12:#35      \l" [ ]
   "BB5\n" [ ]
   "BB6\n           v13 = phi  v11,v12:#35\l19  GetOSSAInstruction:	14= O1_1< theta_R>   \l" [ ]
   "BB7\n21  GetOSSAInstruction:	O2_1= O1_1< D>       \l" [ ]
   "BB8\n22  GetOSSAInstruction:	16= O2_1< P>         \l" [ ]
   "BB9\n24   v18 = binaryop(div) v16 , v17:#10000.0  \l25   v19 = binaryop(sub) v14 , v18           \l26   v20 = neg v19                           \l28  nonreference field get instrctn: 22 = getstatic < Application, LRoot, map_P, <Primordial,[D> >\l31   v24 = binaryop(add) v13 , v23:#1        \l32   v25 = arrayload v22[v24]                \l" [ ]
   "BB10\n33  nonreference field get instrctn: 26 = getstatic < Application, LRoot, map_P, <Primordial,[D> >\l35   v27 = arrayload v26[v13]                \l" [ ]
   "BB11\n36   v28 = binaryop(sub) v25 , v27           \l38   v30 = binaryop(div) v28 , v29:#100.0    \l39   v31 = binaryop(sub) v21:#1.0 , v30      \l40   v32 = binaryop(div) v20 , v31           \l43  GetOSSAInstruction:	33= O1_1< theta_I>   \l" [ ]
   "BB12\n45   v35 = binaryop(sub) v33 , v34:#0.13     \l47   v37 = binaryop(div) v35 , v36:#0.002    \l48   v38 = conversion(I) v37                 \l52   conditional branch(ge) v38,v10:#0       \l" [ ]
   "BB13\n" [ ]
   "BB14\n           v39 = phi  v38,v10:#0\l57   conditional branch(le) v39,v12:#35      \l" [ ]
   "BB15\n" [ ]
   "BB16\n           v40 = phi  v39,v12:#35\l61  GetOSSAInstruction:	41= O1_1< theta_I>   \l" [ ]
   "BB17\n63  GetOSSAInstruction:	O2_1= O1_1< D>       \l" [ ]
   "BB18\n64  GetOSSAInstruction:	43= O2_1< Q>         \l" [ ]
   "BB19\n66   v44 = binaryop(div) v43 , v17:#10000.0  \l67   v45 = binaryop(sub) v41 , v44           \l68   v46 = neg v45                           \l70  nonreference field get instrctn: 47 = getstatic < Application, LRoot, map_Q, <Primordial,[D> >\l73   v48 = binaryop(add) v40 , v23:#1        \l74   v49 = arrayload v47[v48]                \l" [ ]
   "BB20\n75  nonreference field get instrctn: 50 = getstatic < Application, LRoot, map_Q, <Primordial,[D> >\l77   v51 = arrayload v50[v40]                \l" [ ]
   "BB21\n78   v52 = binaryop(sub) v49 , v51           \l80   v54 = binaryop(div) v52 , v53:#20.0     \l81   v55 = binaryop(sub) v21:#1.0 , v54      \l82   v56 = binaryop(div) v46 , v55           \l86   conditional branch(eq) v2,v10:#0        \l" [ ]
   "BB22\n87  nonreference field get instrctn: 57 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >\l88  Create O6_1                              \l" [ ]
   "BB23\n90  < Application, Ljava/lang/StringBuilder, <init>()V >( O6_1 )\l" [ ]
   "BB24\n92  O7_1 = < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; >( O6_1, V60 )\l" [ ]
   "BB25\n94  O7_2 = < Application, Ljava/lang/StringBuilder, append(D)Ljava/lang/StringBuilder; >( O7_1, V32 )\l" [ ]
   "BB26\n96  O7_3 = < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; >( O7_2, V65 )\l" [ ]
   "BB27\n98  O7_4 = < Application, Ljava/lang/StringBuilder, append(D)Ljava/lang/StringBuilder; >( O7_3, V56 )\l" [ ]
   "BB28\n99  O8_1 = < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; >( O7_4 )\l" [ ]
   "BB29\n100  < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >( O5_1, O8_1 )\l" [ ]
   "BB30\n102  GetOSSAInstruction:	O9_1= O1_1< last>   \l" [ ]
   "BB31\n104  GetOSSAInstruction:	O2_1= O1_1< D>      \l" [ ]
   "BB32\n105  GetOSSAInstruction:	75= O2_1< P>        \l" [ ]
   "BB33\n106  PutOSSAInstruction:	O9_1< P > = O9_1<V75>\l" [ ]
   "BB34\n108  GetOSSAInstruction:	O9_1= O1_1< last>   \l" [ ]
   "BB35\n110  GetOSSAInstruction:	O2_1= O1_1< D>      \l" [ ]
   "BB36\n111  GetOSSAInstruction:	78= O2_1< Q>        \l" [ ]
   "BB37\n112  PutOSSAInstruction:	O9_2< Q > = O9_1<V78>\l" [ ]
   "BB38\n115  GetOSSAInstruction:	79= O1_1< theta_R>  \l" [ ]
   "BB39\n116  PutOSSAInstruction:	O1_2< last_theta_R > = O1_1<V79>\l" [ ]
   "BB40\n119  GetOSSAInstruction:	80= O1_2< theta_I>  \l" [ ]
   "BB41\n120  PutOSSAInstruction:	O1_3< last_theta_I > = O1_2<V80>\l" [ ]
   "BB42\n123  GetOSSAInstruction:	81= O1_3< theta_R>  \l" [ ]
   "BB43\n125   v82 = binaryop(add) v81 , v32          \l126  PutOSSAInstruction:	O1_4< theta_R > = O1_3<V82>\l" [ ]
   "BB44\n129  GetOSSAInstruction:	83= O1_4< theta_I>  \l" [ ]
   "BB45\n131   v84 = binaryop(add) v83 , v56          \l132  PutOSSAInstruction:	O1_5< theta_I > = O1_4<V84>\l" [ ]
   "BB46\n133  return                                  \l" [ ]
   "BB47 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1  GetOSSAInstruction:	4= O1_1< theta_R>     \l" 
 "BB1\n1  GetOSSAInstruction:	4= O1_1< theta_R>     \l" -> "BB2\n3   v6 = binaryop(sub) v4 , v5:#0.65         \l5   v8 = binaryop(div) v6 , v7:#0.01         \l6   v9 = conversion(I) v8                    \l10   conditional branch(ge) v9,v10:#0        \l" 
 "BB2\n3   v6 = binaryop(sub) v4 , v5:#0.65         \l5   v8 = binaryop(div) v6 , v7:#0.01         \l6   v9 = conversion(I) v8                    \l10   conditional branch(ge) v9,v10:#0        \l" -> "BB3\n" 
 "BB2\n3   v6 = binaryop(sub) v4 , v5:#0.65         \l5   v8 = binaryop(div) v6 , v7:#0.01         \l6   v9 = conversion(I) v8                    \l10   conditional branch(ge) v9,v10:#0        \l" -> "BB4\n           v11 = phi  v9,v10:#0\l15   conditional branch(le) v11,v12:#35      \l" 
 "BB3\n" -> "BB4\n           v11 = phi  v9,v10:#0\l15   conditional branch(le) v11,v12:#35      \l" 
 "BB4\n           v11 = phi  v9,v10:#0\l15   conditional branch(le) v11,v12:#35      \l" -> "BB5\n" 
 "BB4\n           v11 = phi  v9,v10:#0\l15   conditional branch(le) v11,v12:#35      \l" -> "BB6\n           v13 = phi  v11,v12:#35\l19  GetOSSAInstruction:	14= O1_1< theta_R>   \l" 
 "BB5\n" -> "BB6\n           v13 = phi  v11,v12:#35\l19  GetOSSAInstruction:	14= O1_1< theta_R>   \l" 
 "BB6\n           v13 = phi  v11,v12:#35\l19  GetOSSAInstruction:	14= O1_1< theta_R>   \l" -> "BB7\n21  GetOSSAInstruction:	O2_1= O1_1< D>       \l" 
 "BB7\n21  GetOSSAInstruction:	O2_1= O1_1< D>       \l" -> "BB8\n22  GetOSSAInstruction:	16= O2_1< P>         \l" 
 "BB8\n22  GetOSSAInstruction:	16= O2_1< P>         \l" -> "BB9\n24   v18 = binaryop(div) v16 , v17:#10000.0  \l25   v19 = binaryop(sub) v14 , v18           \l26   v20 = neg v19                           \l28  nonreference field get instrctn: 22 = getstatic < Application, LRoot, map_P, <Primordial,[D> >\l31   v24 = binaryop(add) v13 , v23:#1        \l32   v25 = arrayload v22[v24]                \l" 
 "BB9\n24   v18 = binaryop(div) v16 , v17:#10000.0  \l25   v19 = binaryop(sub) v14 , v18           \l26   v20 = neg v19                           \l28  nonreference field get instrctn: 22 = getstatic < Application, LRoot, map_P, <Primordial,[D> >\l31   v24 = binaryop(add) v13 , v23:#1        \l32   v25 = arrayload v22[v24]                \l" -> "BB10\n33  nonreference field get instrctn: 26 = getstatic < Application, LRoot, map_P, <Primordial,[D> >\l35   v27 = arrayload v26[v13]                \l" 
 "BB10\n33  nonreference field get instrctn: 26 = getstatic < Application, LRoot, map_P, <Primordial,[D> >\l35   v27 = arrayload v26[v13]                \l" -> "BB11\n36   v28 = binaryop(sub) v25 , v27           \l38   v30 = binaryop(div) v28 , v29:#100.0    \l39   v31 = binaryop(sub) v21:#1.0 , v30      \l40   v32 = binaryop(div) v20 , v31           \l43  GetOSSAInstruction:	33= O1_1< theta_I>   \l" 
 "BB11\n36   v28 = binaryop(sub) v25 , v27           \l38   v30 = binaryop(div) v28 , v29:#100.0    \l39   v31 = binaryop(sub) v21:#1.0 , v30      \l40   v32 = binaryop(div) v20 , v31           \l43  GetOSSAInstruction:	33= O1_1< theta_I>   \l" -> "BB12\n45   v35 = binaryop(sub) v33 , v34:#0.13     \l47   v37 = binaryop(div) v35 , v36:#0.002    \l48   v38 = conversion(I) v37                 \l52   conditional branch(ge) v38,v10:#0       \l" 
 "BB12\n45   v35 = binaryop(sub) v33 , v34:#0.13     \l47   v37 = binaryop(div) v35 , v36:#0.002    \l48   v38 = conversion(I) v37                 \l52   conditional branch(ge) v38,v10:#0       \l" -> "BB13\n" 
 "BB12\n45   v35 = binaryop(sub) v33 , v34:#0.13     \l47   v37 = binaryop(div) v35 , v36:#0.002    \l48   v38 = conversion(I) v37                 \l52   conditional branch(ge) v38,v10:#0       \l" -> "BB14\n           v39 = phi  v38,v10:#0\l57   conditional branch(le) v39,v12:#35      \l" 
 "BB13\n" -> "BB14\n           v39 = phi  v38,v10:#0\l57   conditional branch(le) v39,v12:#35      \l" 
 "BB14\n           v39 = phi  v38,v10:#0\l57   conditional branch(le) v39,v12:#35      \l" -> "BB15\n" 
 "BB14\n           v39 = phi  v38,v10:#0\l57   conditional branch(le) v39,v12:#35      \l" -> "BB16\n           v40 = phi  v39,v12:#35\l61  GetOSSAInstruction:	41= O1_1< theta_I>   \l" 
 "BB15\n" -> "BB16\n           v40 = phi  v39,v12:#35\l61  GetOSSAInstruction:	41= O1_1< theta_I>   \l" 
 "BB16\n           v40 = phi  v39,v12:#35\l61  GetOSSAInstruction:	41= O1_1< theta_I>   \l" -> "BB17\n63  GetOSSAInstruction:	O2_1= O1_1< D>       \l" 
 "BB17\n63  GetOSSAInstruction:	O2_1= O1_1< D>       \l" -> "BB18\n64  GetOSSAInstruction:	43= O2_1< Q>         \l" 
 "BB18\n64  GetOSSAInstruction:	43= O2_1< Q>         \l" -> "BB19\n66   v44 = binaryop(div) v43 , v17:#10000.0  \l67   v45 = binaryop(sub) v41 , v44           \l68   v46 = neg v45                           \l70  nonreference field get instrctn: 47 = getstatic < Application, LRoot, map_Q, <Primordial,[D> >\l73   v48 = binaryop(add) v40 , v23:#1        \l74   v49 = arrayload v47[v48]                \l" 
 "BB19\n66   v44 = binaryop(div) v43 , v17:#10000.0  \l67   v45 = binaryop(sub) v41 , v44           \l68   v46 = neg v45                           \l70  nonreference field get instrctn: 47 = getstatic < Application, LRoot, map_Q, <Primordial,[D> >\l73   v48 = binaryop(add) v40 , v23:#1        \l74   v49 = arrayload v47[v48]                \l" -> "BB20\n75  nonreference field get instrctn: 50 = getstatic < Application, LRoot, map_Q, <Primordial,[D> >\l77   v51 = arrayload v50[v40]                \l" 
 "BB20\n75  nonreference field get instrctn: 50 = getstatic < Application, LRoot, map_Q, <Primordial,[D> >\l77   v51 = arrayload v50[v40]                \l" -> "BB21\n78   v52 = binaryop(sub) v49 , v51           \l80   v54 = binaryop(div) v52 , v53:#20.0     \l81   v55 = binaryop(sub) v21:#1.0 , v54      \l82   v56 = binaryop(div) v46 , v55           \l86   conditional branch(eq) v2,v10:#0        \l" 
 "BB21\n78   v52 = binaryop(sub) v49 , v51           \l80   v54 = binaryop(div) v52 , v53:#20.0     \l81   v55 = binaryop(sub) v21:#1.0 , v54      \l82   v56 = binaryop(div) v46 , v55           \l86   conditional branch(eq) v2,v10:#0        \l" -> "BB22\n87  nonreference field get instrctn: 57 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >\l88  Create O6_1                              \l" 
 "BB21\n78   v52 = binaryop(sub) v49 , v51           \l80   v54 = binaryop(div) v52 , v53:#20.0     \l81   v55 = binaryop(sub) v21:#1.0 , v54      \l82   v56 = binaryop(div) v46 , v55           \l86   conditional branch(eq) v2,v10:#0        \l" -> "BB30\n102  GetOSSAInstruction:	O9_1= O1_1< last>   \l" 
 "BB22\n87  nonreference field get instrctn: 57 = getstatic < Application, Ljava/lang/System, out, <Application,Ljava/io/PrintStream> >\l88  Create O6_1                              \l" -> "BB23\n90  < Application, Ljava/lang/StringBuilder, <init>()V >( O6_1 )\l" 
 "BB23\n90  < Application, Ljava/lang/StringBuilder, <init>()V >( O6_1 )\l" -> "BB24\n92  O7_1 = < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; >( O6_1, V60 )\l" 
 "BB24\n92  O7_1 = < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; >( O6_1, V60 )\l" -> "BB25\n94  O7_2 = < Application, Ljava/lang/StringBuilder, append(D)Ljava/lang/StringBuilder; >( O7_1, V32 )\l" 
 "BB25\n94  O7_2 = < Application, Ljava/lang/StringBuilder, append(D)Ljava/lang/StringBuilder; >( O7_1, V32 )\l" -> "BB26\n96  O7_3 = < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; >( O7_2, V65 )\l" 
 "BB26\n96  O7_3 = < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; >( O7_2, V65 )\l" -> "BB27\n98  O7_4 = < Application, Ljava/lang/StringBuilder, append(D)Ljava/lang/StringBuilder; >( O7_3, V56 )\l" 
 "BB27\n98  O7_4 = < Application, Ljava/lang/StringBuilder, append(D)Ljava/lang/StringBuilder; >( O7_3, V56 )\l" -> "BB28\n99  O8_1 = < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; >( O7_4 )\l" 
 "BB28\n99  O8_1 = < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; >( O7_4 )\l" -> "BB29\n100  < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >( O5_1, O8_1 )\l" 
 "BB29\n100  < Application, Ljava/io/PrintStream, println(Ljava/lang/String;)V >( O5_1, O8_1 )\l" -> "BB30\n102  GetOSSAInstruction:	O9_1= O1_1< last>   \l" 
 "BB30\n102  GetOSSAInstruction:	O9_1= O1_1< last>   \l" -> "BB31\n104  GetOSSAInstruction:	O2_1= O1_1< D>      \l" 
 "BB31\n104  GetOSSAInstruction:	O2_1= O1_1< D>      \l" -> "BB32\n105  GetOSSAInstruction:	75= O2_1< P>        \l" 
 "BB32\n105  GetOSSAInstruction:	75= O2_1< P>        \l" -> "BB33\n106  PutOSSAInstruction:	O9_1< P > = O9_1<V75>\l" 
 "BB33\n106  PutOSSAInstruction:	O9_1< P > = O9_1<V75>\l" -> "BB34\n108  GetOSSAInstruction:	O9_1= O1_1< last>   \l" 
 "BB34\n108  GetOSSAInstruction:	O9_1= O1_1< last>   \l" -> "BB35\n110  GetOSSAInstruction:	O2_1= O1_1< D>      \l" 
 "BB35\n110  GetOSSAInstruction:	O2_1= O1_1< D>      \l" -> "BB36\n111  GetOSSAInstruction:	78= O2_1< Q>        \l" 
 "BB36\n111  GetOSSAInstruction:	78= O2_1< Q>        \l" -> "BB37\n112  PutOSSAInstruction:	O9_2< Q > = O9_1<V78>\l" 
 "BB37\n112  PutOSSAInstruction:	O9_2< Q > = O9_1<V78>\l" -> "BB38\n115  GetOSSAInstruction:	79= O1_1< theta_R>  \l" 
 "BB38\n115  GetOSSAInstruction:	79= O1_1< theta_R>  \l" -> "BB39\n116  PutOSSAInstruction:	O1_2< last_theta_R > = O1_1<V79>\l" 
 "BB39\n116  PutOSSAInstruction:	O1_2< last_theta_R > = O1_1<V79>\l" -> "BB40\n119  GetOSSAInstruction:	80= O1_2< theta_I>  \l" 
 "BB40\n119  GetOSSAInstruction:	80= O1_2< theta_I>  \l" -> "BB41\n120  PutOSSAInstruction:	O1_3< last_theta_I > = O1_2<V80>\l" 
 "BB41\n120  PutOSSAInstruction:	O1_3< last_theta_I > = O1_2<V80>\l" -> "BB42\n123  GetOSSAInstruction:	81= O1_3< theta_R>  \l" 
 "BB42\n123  GetOSSAInstruction:	81= O1_3< theta_R>  \l" -> "BB43\n125   v82 = binaryop(add) v81 , v32          \l126  PutOSSAInstruction:	O1_4< theta_R > = O1_3<V82>\l" 
 "BB43\n125   v82 = binaryop(add) v81 , v32          \l126  PutOSSAInstruction:	O1_4< theta_R > = O1_3<V82>\l" -> "BB44\n129  GetOSSAInstruction:	83= O1_4< theta_I>  \l" 
 "BB44\n129  GetOSSAInstruction:	83= O1_4< theta_I>  \l" -> "BB45\n131   v84 = binaryop(add) v83 , v56          \l132  PutOSSAInstruction:	O1_5< theta_I > = O1_4<V84>\l" 
 "BB45\n131   v84 = binaryop(add) v83 , v56          \l132  PutOSSAInstruction:	O1_5< theta_I > = O1_4<V84>\l" -> "BB46\n133  return                                  \l" 
 "BB46\n133  return                                  \l" -> "BB47 (ex)\n\n" 

}