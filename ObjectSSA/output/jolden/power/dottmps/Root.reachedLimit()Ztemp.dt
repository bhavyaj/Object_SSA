digraph "DirectedGraph" {
graph [concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1   v3 = getfield < Application, LRoot, D, <Application,LDemand> > v1\l" [ ]
   "BB2\n2   v4 = getfield < Application, LDemand, P, <Primordial,D> > v3\l" [ ]
   "BB3\n4   v6 = binaryop(div) v4 , v5:#10000.0\l6   v7 = getfield < Application, LRoot, theta_R, <Primordial,D> > v1\l" [ ]
   "BB4\n7   v8 = binaryop(sub) v6 , v7     \l8   v10 = invokestatic < Application, Ljava/lang/Math, abs(D)D > v8 @16 exception:v9\l" [ ]
   "BB5\n10   v12 = compare v10,v11:#1.0E-5 opcode=cmpg\l12   conditional branch(ge) v12,v13:#0\l" [ ]
   "BB6\n14   v14 = getfield < Application, LRoot, D, <Application,LDemand> > v1\l" [ ]
   "BB7\n15   v15 = getfield < Application, LDemand, Q, <Primordial,D> > v14\l" [ ]
   "BB8\n17   v16 = binaryop(div) v15 , v5:#10000.0\l19   v17 = getfield < Application, LRoot, theta_I, <Primordial,D> > v1\l" [ ]
   "BB9\n20   v18 = binaryop(sub) v16 , v17 \l21   v20 = invokestatic < Application, Ljava/lang/Math, abs(D)D > v18 @42 exception:v19\l" [ ]
   "BB10\n23   v21 = compare v20,v11:#1.0E-5 opcode=cmpg\l25   conditional branch(ge) v21,v13:#0\l" [ ]
   "BB11\n27   goto                          \l" [ ]
   "BB12\n" [ ]
   "BB13\n           v23 = phi  v22:#1,v13:#0\l29   return v23                    \l" [ ]
   "BB14 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1   v3 = getfield < Application, LRoot, D, <Application,LDemand> > v1\l" 
 "BB1\n1   v3 = getfield < Application, LRoot, D, <Application,LDemand> > v1\l" -> "BB2\n2   v4 = getfield < Application, LDemand, P, <Primordial,D> > v3\l" 
 "BB2\n2   v4 = getfield < Application, LDemand, P, <Primordial,D> > v3\l" -> "BB3\n4   v6 = binaryop(div) v4 , v5:#10000.0\l6   v7 = getfield < Application, LRoot, theta_R, <Primordial,D> > v1\l" 
 "BB3\n4   v6 = binaryop(div) v4 , v5:#10000.0\l6   v7 = getfield < Application, LRoot, theta_R, <Primordial,D> > v1\l" -> "BB4\n7   v8 = binaryop(sub) v6 , v7     \l8   v10 = invokestatic < Application, Ljava/lang/Math, abs(D)D > v8 @16 exception:v9\l" 
 "BB4\n7   v8 = binaryop(sub) v6 , v7     \l8   v10 = invokestatic < Application, Ljava/lang/Math, abs(D)D > v8 @16 exception:v9\l" -> "BB5\n10   v12 = compare v10,v11:#1.0E-5 opcode=cmpg\l12   conditional branch(ge) v12,v13:#0\l" 
 "BB5\n10   v12 = compare v10,v11:#1.0E-5 opcode=cmpg\l12   conditional branch(ge) v12,v13:#0\l" -> "BB6\n14   v14 = getfield < Application, LRoot, D, <Application,LDemand> > v1\l" 
 "BB5\n10   v12 = compare v10,v11:#1.0E-5 opcode=cmpg\l12   conditional branch(ge) v12,v13:#0\l" -> "BB12\n" 
 "BB6\n14   v14 = getfield < Application, LRoot, D, <Application,LDemand> > v1\l" -> "BB7\n15   v15 = getfield < Application, LDemand, Q, <Primordial,D> > v14\l" 
 "BB7\n15   v15 = getfield < Application, LDemand, Q, <Primordial,D> > v14\l" -> "BB8\n17   v16 = binaryop(div) v15 , v5:#10000.0\l19   v17 = getfield < Application, LRoot, theta_I, <Primordial,D> > v1\l" 
 "BB8\n17   v16 = binaryop(div) v15 , v5:#10000.0\l19   v17 = getfield < Application, LRoot, theta_I, <Primordial,D> > v1\l" -> "BB9\n20   v18 = binaryop(sub) v16 , v17 \l21   v20 = invokestatic < Application, Ljava/lang/Math, abs(D)D > v18 @42 exception:v19\l" 
 "BB9\n20   v18 = binaryop(sub) v16 , v17 \l21   v20 = invokestatic < Application, Ljava/lang/Math, abs(D)D > v18 @42 exception:v19\l" -> "BB10\n23   v21 = compare v20,v11:#1.0E-5 opcode=cmpg\l25   conditional branch(ge) v21,v13:#0\l" 
 "BB10\n23   v21 = compare v20,v11:#1.0E-5 opcode=cmpg\l25   conditional branch(ge) v21,v13:#0\l" -> "BB11\n27   goto                          \l" 
 "BB10\n23   v21 = compare v20,v11:#1.0E-5 opcode=cmpg\l25   conditional branch(ge) v21,v13:#0\l" -> "BB12\n" 
 "BB11\n27   goto                          \l" -> "BB13\n           v23 = phi  v22:#1,v13:#0\l29   return v23                    \l" 
 "BB12\n" -> "BB13\n           v23 = phi  v22:#1,v13:#0\l29   return v23                    \l" 
 "BB13\n           v23 = phi  v22:#1,v13:#0\l29   return v23                    \l" -> "BB14 (ex)\n\n" 

}