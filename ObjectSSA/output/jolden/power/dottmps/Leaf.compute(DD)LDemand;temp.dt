digraph "DirectedGraph" {
graph [concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1   v5 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" [ ]
   "BB2\n4   invokevirtual < Application, LDemand, optimizeNode(DD)V > v5,v2,v3 @6 exception:v6\l" [ ]
   "BB3\n6   v7 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" [ ]
   "BB4\n7   v8 = getfield < Application, LDemand, P, <Primordial,D> > v7\l" [ ]
   "BB5\n9   v10 = compare v8,v9:#0.0 opcode=cmpg\l11   conditional branch(ge) v10,v11:#0\l" [ ]
   "BB6\n13   v12 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" [ ]
   "BB7\n15   putfield v12 = v9:#0.0 < Application, LDemand, P, <Primordial,D> >\l" [ ]
   "BB8\n17   v13 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" [ ]
   "BB9\n19   putfield v13 = v9:#0.0 < Application, LDemand, Q, <Primordial,D> >\l" [ ]
   "BB10\n21   v14 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" [ ]
   "BB11\n22   return v14                    \l" [ ]
   "BB12 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1   v5 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" 
 "BB1\n1   v5 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" -> "BB2\n4   invokevirtual < Application, LDemand, optimizeNode(DD)V > v5,v2,v3 @6 exception:v6\l" 
 "BB2\n4   invokevirtual < Application, LDemand, optimizeNode(DD)V > v5,v2,v3 @6 exception:v6\l" -> "BB3\n6   v7 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" 
 "BB3\n6   v7 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" -> "BB4\n7   v8 = getfield < Application, LDemand, P, <Primordial,D> > v7\l" 
 "BB4\n7   v8 = getfield < Application, LDemand, P, <Primordial,D> > v7\l" -> "BB5\n9   v10 = compare v8,v9:#0.0 opcode=cmpg\l11   conditional branch(ge) v10,v11:#0\l" 
 "BB5\n9   v10 = compare v8,v9:#0.0 opcode=cmpg\l11   conditional branch(ge) v10,v11:#0\l" -> "BB6\n13   v12 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" 
 "BB5\n9   v10 = compare v8,v9:#0.0 opcode=cmpg\l11   conditional branch(ge) v10,v11:#0\l" -> "BB10\n21   v14 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" 
 "BB6\n13   v12 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" -> "BB7\n15   putfield v12 = v9:#0.0 < Application, LDemand, P, <Primordial,D> >\l" 
 "BB7\n15   putfield v12 = v9:#0.0 < Application, LDemand, P, <Primordial,D> >\l" -> "BB8\n17   v13 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" 
 "BB8\n17   v13 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" -> "BB9\n19   putfield v13 = v9:#0.0 < Application, LDemand, Q, <Primordial,D> >\l" 
 "BB9\n19   putfield v13 = v9:#0.0 < Application, LDemand, Q, <Primordial,D> >\l" -> "BB10\n21   v14 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" 
 "BB10\n21   v14 = getfield < Application, LLeaf, D, <Application,LDemand> > v1\l" -> "BB11\n22   return v14                    \l" 
 "BB11\n22   return v14                    \l" -> "BB12 (ex)\n\n" 

}