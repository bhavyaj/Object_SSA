digraph "DirectedGraph" {
graph [label = "Object SSA for TreeNode.addTree()I", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1  GetOSSAInstruction:	3= O1_1< value>       \l" [ ]
   "BB2\n4  GetOSSAInstruction:	O2_1= O1_1< left>     \l" [ ]
   "BB3\n6   conditional branch(eq) v4,v5:#null       \l" [ ]
   "BB4\n9  GetOSSAInstruction:	O2_1= O1_1< left>     \l" [ ]
   "BB5\n10  O3_1 = < Application, LTreeNode, addTree()I >( O2_1 )\l" [ ]
   "BB6\n11   v9 = binaryop(add) v3 , v8              \l" [ ]
   "BB7\n           v10 = phi  v3,v9\l14  GetOSSAInstruction:	O4_1= O1_1< right>   \l" [ ]
   "BB8\n16   conditional branch(eq) v11,v5:#null     \l" [ ]
   "BB9\n19  GetOSSAInstruction:	O4_1= O1_1< right>   \l" [ ]
   "BB10\n20  O3_2 = < Application, LTreeNode, addTree()I >( O4_1 )\l" [ ]
   "BB11\n21   v15 = binaryop(add) v10 , v14           \l" [ ]
   "BB12\n           v16 = phi  v10,v15\l24  Return O3_1                              \l" [ ]
   "BB13 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1  GetOSSAInstruction:	3= O1_1< value>       \l" 
 "BB1\n1  GetOSSAInstruction:	3= O1_1< value>       \l" -> "BB2\n4  GetOSSAInstruction:	O2_1= O1_1< left>     \l" 
 "BB2\n4  GetOSSAInstruction:	O2_1= O1_1< left>     \l" -> "BB3\n6   conditional branch(eq) v4,v5:#null       \l" 
 "BB3\n6   conditional branch(eq) v4,v5:#null       \l" -> "BB4\n9  GetOSSAInstruction:	O2_1= O1_1< left>     \l" 
 "BB3\n6   conditional branch(eq) v4,v5:#null       \l" -> "BB7\n           v10 = phi  v3,v9\l14  GetOSSAInstruction:	O4_1= O1_1< right>   \l" 
 "BB4\n9  GetOSSAInstruction:	O2_1= O1_1< left>     \l" -> "BB5\n10  O3_1 = < Application, LTreeNode, addTree()I >( O2_1 )\l" 
 "BB5\n10  O3_1 = < Application, LTreeNode, addTree()I >( O2_1 )\l" -> "BB6\n11   v9 = binaryop(add) v3 , v8              \l" 
 "BB6\n11   v9 = binaryop(add) v3 , v8              \l" -> "BB7\n           v10 = phi  v3,v9\l14  GetOSSAInstruction:	O4_1= O1_1< right>   \l" 
 "BB7\n           v10 = phi  v3,v9\l14  GetOSSAInstruction:	O4_1= O1_1< right>   \l" -> "BB8\n16   conditional branch(eq) v11,v5:#null     \l" 
 "BB8\n16   conditional branch(eq) v11,v5:#null     \l" -> "BB9\n19  GetOSSAInstruction:	O4_1= O1_1< right>   \l" 
 "BB8\n16   conditional branch(eq) v11,v5:#null     \l" -> "BB12\n           v16 = phi  v10,v15\l24  Return O3_1                              \l" 
 "BB9\n19  GetOSSAInstruction:	O4_1= O1_1< right>   \l" -> "BB10\n20  O3_2 = < Application, LTreeNode, addTree()I >( O4_1 )\l" 
 "BB10\n20  O3_2 = < Application, LTreeNode, addTree()I >( O4_1 )\l" -> "BB11\n21   v15 = binaryop(add) v10 , v14           \l" 
 "BB11\n21   v15 = binaryop(add) v10 , v14           \l" -> "BB12\n           v16 = phi  v10,v15\l24  Return O3_1                              \l" 
 "BB12\n           v16 = phi  v10,v15\l24  Return O3_1                              \l" -> "BB13 (ex)\n\n" 

}