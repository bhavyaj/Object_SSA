digraph "DirectedGraph" {
graph [label = "Object SSA for MathVector.<init>()V", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n1  < Application, Ljava/lang/Object, <init>()V >( O1_1 )\l" [ ]
   "BB2\n4  Create O2_1                               \l" [ ]
   "BB3\n5  PutOSSAInstruction:	O1_2< data > = O1_1<refO2_1>\l" [ ]
   "BB4\n" [ ]
   "BB5\n           v11 = phi  v10,v6:#0\l10   conditional branch(ge) v11,v4:#3        \l" [ ]
   "BB6\n12  GetOSSAInstruction:	O2_1= O1_2< data>    \l" [ ]
   "BB7\n15   arraystore v7[v11] = v8:#0.0            \l" [ ]
   "BB8\n18   v10 = binaryop(add) v11 , v9:#1         \l20   goto                                    \l" [ ]
   "BB9\n21  return                                   \l" [ ]
   "BB10 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n1  < Application, Ljava/lang/Object, <init>()V >( O1_1 )\l" 
 "BB1\n1  < Application, Ljava/lang/Object, <init>()V >( O1_1 )\l" -> "BB2\n4  Create O2_1                               \l" 
 "BB2\n4  Create O2_1                               \l" -> "BB3\n5  PutOSSAInstruction:	O1_2< data > = O1_1<refO2_1>\l" 
 "BB3\n5  PutOSSAInstruction:	O1_2< data > = O1_1<refO2_1>\l" -> "BB4\n" 
 "BB4\n" -> "BB5\n           v11 = phi  v10,v6:#0\l10   conditional branch(ge) v11,v4:#3        \l" 
 "BB5\n           v11 = phi  v10,v6:#0\l10   conditional branch(ge) v11,v4:#3        \l" -> "BB6\n12  GetOSSAInstruction:	O2_1= O1_2< data>    \l" 
 "BB5\n           v11 = phi  v10,v6:#0\l10   conditional branch(ge) v11,v4:#3        \l" -> "BB9\n21  return                                   \l" 
 "BB6\n12  GetOSSAInstruction:	O2_1= O1_2< data>    \l" -> "BB7\n15   arraystore v7[v11] = v8:#0.0            \l" 
 "BB7\n15   arraystore v7[v11] = v8:#0.0            \l" -> "BB8\n18   v10 = binaryop(add) v11 , v9:#1         \l20   goto                                    \l" 
 "BB8\n18   v10 = binaryop(add) v11 , v9:#1         \l20   goto                                    \l" -> "BB5\n           v11 = phi  v10,v6:#0\l10   conditional branch(ge) v11,v4:#3        \l" 
 "BB9\n21  return                                   \l" -> "BB10 (ex)\n\n" 

}