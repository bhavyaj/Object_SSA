digraph "DirectedGraph" {
graph [label = "Object SSA for MathVector.subtraction(LMathVector;LMathVector;)V", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n" [ ]
   "BB2\n           v15 = phi  v14,v5:#0\l4   conditional branch(ge) v15,v6:#3         \l" [ ]
   "BB3\n6  GetOSSAInstruction:	O4_1= O1_1< data>     \l" [ ]
   "BB4\n9  GetOSSAInstruction:	O5_1= O2_1< data>     \l" [ ]
   "BB5\n11   v9 = arrayload v8[v15]                  \l" [ ]
   "BB6\n13  GetOSSAInstruction:	O5_1= O3_1< data>    \l" [ ]
   "BB7\n15   v11 = arrayload v10[v15]                \l" [ ]
   "BB8\n16   v12 = binaryop(sub) v9 , v11            \l17   arraystore v7[v15] = v12                \l" [ ]
   "BB9\n20   v14 = binaryop(add) v15 , v13:#1        \l22   goto                                    \l" [ ]
   "BB10\n23  return                                   \l" [ ]
   "BB11 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n" 
 "BB1\n" -> "BB2\n           v15 = phi  v14,v5:#0\l4   conditional branch(ge) v15,v6:#3         \l" 
 "BB2\n           v15 = phi  v14,v5:#0\l4   conditional branch(ge) v15,v6:#3         \l" -> "BB3\n6  GetOSSAInstruction:	O4_1= O1_1< data>     \l" 
 "BB2\n           v15 = phi  v14,v5:#0\l4   conditional branch(ge) v15,v6:#3         \l" -> "BB10\n23  return                                   \l" 
 "BB3\n6  GetOSSAInstruction:	O4_1= O1_1< data>     \l" -> "BB4\n9  GetOSSAInstruction:	O5_1= O2_1< data>     \l" 
 "BB4\n9  GetOSSAInstruction:	O5_1= O2_1< data>     \l" -> "BB5\n11   v9 = arrayload v8[v15]                  \l" 
 "BB5\n11   v9 = arrayload v8[v15]                  \l" -> "BB6\n13  GetOSSAInstruction:	O5_1= O3_1< data>    \l" 
 "BB6\n13  GetOSSAInstruction:	O5_1= O3_1< data>    \l" -> "BB7\n15   v11 = arrayload v10[v15]                \l" 
 "BB7\n15   v11 = arrayload v10[v15]                \l" -> "BB8\n16   v12 = binaryop(sub) v9 , v11            \l17   arraystore v7[v15] = v12                \l" 
 "BB8\n16   v12 = binaryop(sub) v9 , v11            \l17   arraystore v7[v15] = v12                \l" -> "BB9\n20   v14 = binaryop(add) v15 , v13:#1        \l22   goto                                    \l" 
 "BB9\n20   v14 = binaryop(add) v15 , v13:#1        \l22   goto                                    \l" -> "BB2\n           v15 = phi  v14,v5:#0\l4   conditional branch(ge) v15,v6:#3         \l" 
 "BB10\n23  return                                   \l" -> "BB11 (ex)\n\n" 

}