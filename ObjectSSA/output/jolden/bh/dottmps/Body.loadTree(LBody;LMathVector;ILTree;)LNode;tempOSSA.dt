digraph "DirectedGraph" {
graph [label = "Object SSA for Body.loadTree(LBody;LMathVector;ILTree;)LNode;", labelloc=t, concentrate = true];center=true;fontsize=6;node [ color=blue,shape="box"fontsize=6,fontcolor=black,fontname=Arial];edge [ color=black,fontsize=6,fontcolor=black,fontname=Arial]; 
   "BB0 (en)\n\n" [ ]
   "BB1\n0  Create O5_1                               \l" [ ]
   "BB2\n2  < Application, LCell, <init>()V >( O5_1 ) \l" [ ]
   "BB3\n7  O6_1 = < Application, LBody, subindex(LTree;I)I >( O2_1, O4_1, V4 )\l" [ ]
   "BB4\n10  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" [ ]
   "BB5\n13   arraystore v11[v10] = v1                \l" [ ]
   "BB6\n16  O6_2 = < Application, LBody, oldSubindex(LMathVector;I)I >( O3_1, V4 )\l" [ ]
   "BB7\n19  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" [ ]
   "BB8\n21   v15 = arrayload v14[v13]                \l" [ ]
   "BB9\n25   conditional branch(eq) v15,v16:#null    \l" [ ]
   "BB10\n27  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" [ ]
   "BB11\n34   v20 = binaryop(SHR) v4 , v19:#1         \l36  O8_1 = < Application, LNode, loadTree(LBody;LMathVector;ILTree;)LNode; >( V15, O2_1, O3_1, V20, O4_1 )\l" [ ]
   "BB12\n37   arraystore v18[v13] = v22               \l" [ ]
   "BB13\n38   goto                                    \l" [ ]
   "BB14\n40  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" [ ]
   "BB15\n43   arraystore v17[v13] = v2                \l" [ ]
   "BB16\n45  Return O5_1                              \l" [ ]
   "BB17 (ex)\n\n" [ ]
 "BB0 (en)\n\n" -> "BB1\n0  Create O5_1                               \l" 
 "BB1\n0  Create O5_1                               \l" -> "BB2\n2  < Application, LCell, <init>()V >( O5_1 ) \l" 
 "BB2\n2  < Application, LCell, <init>()V >( O5_1 ) \l" -> "BB3\n7  O6_1 = < Application, LBody, subindex(LTree;I)I >( O2_1, O4_1, V4 )\l" 
 "BB3\n7  O6_1 = < Application, LBody, subindex(LTree;I)I >( O2_1, O4_1, V4 )\l" -> "BB4\n10  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" 
 "BB4\n10  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" -> "BB5\n13   arraystore v11[v10] = v1                \l" 
 "BB5\n13   arraystore v11[v10] = v1                \l" -> "BB6\n16  O6_2 = < Application, LBody, oldSubindex(LMathVector;I)I >( O3_1, V4 )\l" 
 "BB6\n16  O6_2 = < Application, LBody, oldSubindex(LMathVector;I)I >( O3_1, V4 )\l" -> "BB7\n19  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" 
 "BB7\n19  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" -> "BB8\n21   v15 = arrayload v14[v13]                \l" 
 "BB8\n21   v15 = arrayload v14[v13]                \l" -> "BB9\n25   conditional branch(eq) v15,v16:#null    \l" 
 "BB9\n25   conditional branch(eq) v15,v16:#null    \l" -> "BB10\n27  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" 
 "BB9\n25   conditional branch(eq) v15,v16:#null    \l" -> "BB14\n40  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" 
 "BB10\n27  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" -> "BB11\n34   v20 = binaryop(SHR) v4 , v19:#1         \l36  O8_1 = < Application, LNode, loadTree(LBody;LMathVector;ILTree;)LNode; >( V15, O2_1, O3_1, V20, O4_1 )\l" 
 "BB11\n34   v20 = binaryop(SHR) v4 , v19:#1         \l36  O8_1 = < Application, LNode, loadTree(LBody;LMathVector;ILTree;)LNode; >( V15, O2_1, O3_1, V20, O4_1 )\l" -> "BB12\n37   arraystore v18[v13] = v22               \l" 
 "BB12\n37   arraystore v18[v13] = v22               \l" -> "BB13\n38   goto                                    \l" 
 "BB13\n38   goto                                    \l" -> "BB16\n45  Return O5_1                              \l" 
 "BB14\n40  GetOSSAInstruction:	O7_1= O5_1< subp>    \l" -> "BB15\n43   arraystore v17[v13] = v2                \l" 
 "BB15\n43   arraystore v17[v13] = v2                \l" -> "BB16\n45  Return O5_1                              \l" 
 "BB16\n45  Return O5_1                              \l" -> "BB17 (ex)\n\n" 

}